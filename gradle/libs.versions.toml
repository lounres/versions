[versions]
kotlin = "2.0.21"

kotlinx-atomicfu = "0.25.0"
kotlinx-coroutines = "1.9.0"
kotlinx-serialization = "1.7.3"
kotlinx-datetime = "0.6.1"
kotlinx-kover = "0.8.3"
kotlinx-benchmark = "0.4.12"
kotlinx-lincheck = "2.34"
kotlinx-binary-compatibility-validator = "0.16.3"
kotlinx-knit = "0.4.0"

kmath = "0.4.0"
compose-multiplatform = "1.7.0"
kaml = "0.59.0"
logkube = "0.1.0"
kotest = "5.9.1"
jmh = "1.37"
dokka = "2.0.0-Beta"
changelog = "2.2.0"

nexus-publish-plugin = "2.0.0"
gradle-plugin-publish = "1.3.0"

[plugins]
# Kotlin plugins
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }

# Kotlin side plugins
kotlin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

# kotlinx plugins
kotlinx-atomicfu = { id = "org.jetbrains.kotlinx.atomicfu", version.ref = "kotlinx-atomicfu" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinx-kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kotlinx-kover" }
kotlinx-benchmark = { id = "org.jetbrains.kotlinx.benchmark", version.ref = "kotlinx-benchmark" }
kotlinx-binary-compatibility-validator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "kotlinx-binary-compatibility-validator" }
kotlinx-knit = { id = "org.jetbrains.kotlinx:kotlinx-knit", version.ref = "kotlinx-knit" }

# Extra
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
kotest-multiplatform = { id = "io.kotest.multiplatform", version.ref = "kotest" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
changelog = { id = "org.jetbrains.changelog", version.ref = "changelog" }

# Publishing
nexus-publish-plugin = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexus-publish-plugin" }
gradle-plugin-publish = { id = "com.gradle.plugin-publish", version.ref = "gradle-plugin-publish"}

[libraries]
# kotlinx.coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-debug = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-debug", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }

# kotlinx.serialization
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# kotlinx.datetime
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

# kotlinx.benchmark
kotlinx-benchmark-runtime = { module = "org.jetbrains.kotlinx:kotlinx-benchmark-runtime", version.ref = "kotlinx-benchmark" }

# kotlinx.lincheck
kotlinx-lincheck = { module = "org.jetbrains.kotlinx:lincheck", version.ref = "kotlinx-lincheck" }

# Kotest
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-framework-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-framework-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }

# Dokka
dokka-base = { module = "org.jetbrains.dokka:dokka-base", version.ref = "dokka" }
dokka-mathjax = { module = "org.jetbrains.dokka:mathjax-plugin", version.ref = "dokka" }

# KMath
kmath-core = { module = "space.kscience:kmath-core", version.ref = "kmath" }

# LogKube
logkube-core = { module = "dev.lounres:logKube.core", version.ref = "logkube" }

# Kaml
kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }